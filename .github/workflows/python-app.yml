# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

# Trigger Conditions: Push or pull from main branch.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Specify permissions. Only read is set.
permissions:
  contents: read

# The workflow has a single job named build.
jobs:
  # define the python job. build, test and run.
  build-test-run:
    # System to run on.
    runs-on: ubuntu-latest

    # Steps to be executed.
    steps:
    # Github action for checking out code. Making it available for the next phases.
    - uses: actions/checkout@v4

    # Github action for setting up the python environment.
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Code to install dependencies.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt

    # Code linting.
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    # Run the test.
    - name: Test with pytest
      run: |
        pytest src/test.py
